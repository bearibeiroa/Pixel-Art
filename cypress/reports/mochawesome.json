{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 10,
    "pending": 0,
    "failures": 31,
    "start": "2021-07-08T18:33:01.323Z",
    "end": "2021-07-08T18:35:07.221Z",
    "duration": 125898,
    "testsRegistered": 41,
    "passPercent": 24.390243902439025,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8a71fef4-e404-47ab-8a82-72bbaaeb6467",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0ee939cd-acf9-4408-becf-d7b5f07a9feb",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "8fe7940e-360b-4245-8909-38976da7a5ad",
              "parentUUID": "0ee939cd-acf9-4408-becf-d7b5f07a9feb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8fe7940e-360b-4245-8909-38976da7a5ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 463,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fafabe06-2034-4090-a833-6fc1582ced9c",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 381,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "e887573d-45cf-4c2f-a882-603804ee23c6",
              "parentUUID": "fafabe06-2034-4090-a833-6fc1582ced9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(colors => {\n  for (let i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "acffe475-7c61-4644-87af-00d04c700121",
              "parentUUID": "fafabe06-2034-4090-a833-6fc1582ced9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(color => {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "3477aa76-6b23-4420-9e53-c797f5c12f13",
              "parentUUID": "fafabe06-2034-4090-a833-6fc1582ced9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(color => {\n  cy.wrap(color).and('have.css', 'border', `1px solid ${BLACK}`).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "c86828e6-dbd2-4179-8cd9-147112936b95",
              "parentUUID": "fafabe06-2034-4090-a833-6fc1582ced9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(colors => {\n  for (let index = 1; index < colors.length; index += 1) {\n    const currentColor = colors[index];\n    const previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "8527d21e-be42-41f4-9e90-108c9bb09169",
              "parentUUID": "fafabe06-2034-4090-a833-6fc1582ced9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(title => {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "81c7cbe7-ad12-4bee-aab8-30ca2991dd22",
              "parentUUID": "fafabe06-2034-4090-a833-6fc1582ced9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(colors => {\n  const allColors = Array.from(colors).map(color => Cypress.$(color).css('background-color'));\n  cy.log(allColors);\n  const uniqColors = [...new Set(allColors)];\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "035723bb-14ae-4eeb-a4d4-44fd64b80f50",
              "parentUUID": "fafabe06-2034-4090-a833-6fc1582ced9c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e887573d-45cf-4c2f-a882-603804ee23c6",
            "acffe475-7c61-4644-87af-00d04c700121",
            "3477aa76-6b23-4420-9e53-c797f5c12f13",
            "c86828e6-dbd2-4179-8cd9-147112936b95",
            "8527d21e-be42-41f4-9e90-108c9bb09169",
            "81c7cbe7-ad12-4bee-aab8-30ca2991dd22",
            "035723bb-14ae-4eeb-a4d4-44fd64b80f50"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1755,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b7441fb-9feb-4019-80e3-a054f13473d6",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 4172,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#blue.color>' to have CSS property 'background-color' with the value 'rgb(0, 0, 0)', but the value was 'rgb(0, 0, 255)'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#blue.color>' to have CSS property 'background-color' with the value 'rgb(0, 0, 0)', but the value was 'rgb(0, 0, 255)'\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:176:30)",
                "diff": "- 'rgb(0, 0, 255)'\n+ 'rgb(0, 0, 0)'\n"
              },
              "uuid": "b3a1e197-0d8d-40a2-a7fb-e04432b2a471",
              "parentUUID": "6b7441fb-9feb-4019-80e3-a054f13473d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "7cdb007e-e829-451b-813c-d3751e6975df",
              "parentUUID": "6b7441fb-9feb-4019-80e3-a054f13473d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7cdb007e-e829-451b-813c-d3751e6975df"
          ],
          "failures": [
            "b3a1e197-0d8d-40a2-a7fb-e04432b2a471"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4625,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "53882886-5870-42a0-b0ef-3784e20ed08f",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 4290,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#pixel-board`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#pixel-board`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:198:28)",
                "diff": null
              },
              "uuid": "e633fb44-62bb-4a23-802a-71857c62d73d",
              "parentUUID": "53882886-5870-42a0-b0ef-3784e20ed08f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 4210,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:201:22)",
                "diff": null
              },
              "uuid": "376049ad-6cd6-4de3-b904-1ce9c58c9e0f",
              "parentUUID": "53882886-5870-42a0-b0ef-3784e20ed08f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 4157,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(pixel => {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:204:22)",
                "diff": null
              },
              "uuid": "a83c0a56-2e5c-4fb7-9ff6-a1fc69da4ba4",
              "parentUUID": "53882886-5870-42a0-b0ef-3784e20ed08f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 4257,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(palette => {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#pixel-board`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#pixel-board`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:210:30)",
                "diff": null
              },
              "uuid": "8ff564cf-3159-43d0-9d28-1e1bb5f98bb9",
              "parentUUID": "53882886-5870-42a0-b0ef-3784e20ed08f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e633fb44-62bb-4a23-802a-71857c62d73d",
            "376049ad-6cd6-4de3-b904-1ce9c58c9e0f",
            "a83c0a56-2e5c-4fb7-9ff6-a1fc69da4ba4",
            "8ff564cf-3159-43d0-9d28-1e1bb5f98bb9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 16914,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "14c35202-004e-415e-9b34-60f10d6004dc",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 4222,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(pixel => {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(pixels => {\n  const rows = chunk(pixels, 5);\n  rows.forEach(row => {\n    for (let index = 1; index < row.length; index += 1) {\n      const current = pixels[index];\n      const previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (let index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:219:22)",
                "diff": null
              },
              "uuid": "4d418a30-dc4d-482f-8493-e8e1c71da883",
              "parentUUID": "14c35202-004e-415e-9b34-60f10d6004dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 4208,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(pixel => {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', `1px solid ${BLACK}`);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:237:8)",
                "diff": null
              },
              "uuid": "b238b9a2-937b-4c22-b6b6-836caa7a7bf2",
              "parentUUID": "14c35202-004e-415e-9b34-60f10d6004dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4d418a30-dc4d-482f-8493-e8e1c71da883",
            "b238b9a2-937b-4c22-b6b6-836caa7a7bf2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8430,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e2730de3-a3e0-4836-b65b-36df09327c91",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 4231,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.selected`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.selected`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:247:8)",
                "diff": null
              },
              "uuid": "0757f1fb-d2b7-4be7-9530-4132aa0bcc4a",
              "parentUUID": "e2730de3-a3e0-4836-b65b-36df09327c91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(color => {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "34a33be8-abbb-44f9-acf2-28acbab29065",
              "parentUUID": "e2730de3-a3e0-4836-b65b-36df09327c91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34a33be8-abbb-44f9-acf2-28acbab29065"
          ],
          "failures": [
            "0757f1fb-d2b7-4be7-9530-4132aa0bcc4a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4489,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aa333d27-c765-4a3d-b026-1614b8629e74",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 366,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each((selectedColor, selectedColorIndex) => {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each((color, colorIndex) => {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have.class('selected');\n    } else {\n      expect(color).not.to.have.class('selected');\n    }\n  });\n});",
              "err": {
                "message": "AssertionError: expected '<div#blue.color>' to have class 'selected'",
                "estack": "AssertionError: expected '<div#blue.color>' to have class 'selected'\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:264:38)",
                "diff": null
              },
              "uuid": "1799b9a0-88d6-432b-9b60-852dedd633eb",
              "parentUUID": "aa333d27-c765-4a3d-b026-1614b8629e74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 4261,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(color => {\n  const backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(pixel => {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:275:10)",
                "diff": null
              },
              "uuid": "5c6c40e8-7cad-435c-9cea-29aec784075b",
              "parentUUID": "aa333d27-c765-4a3d-b026-1614b8629e74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1799b9a0-88d6-432b-9b60-852dedd633eb",
            "5c6c40e8-7cad-435c-9cea-29aec784075b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4627,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dc198238-4c6a-4ff6-afc2-5878dae4b8fe",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 4254,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(pixel => {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:286:8)",
                "diff": null
              },
              "uuid": "2d6639f5-072f-4a2b-bc36-781aa9831734",
              "parentUUID": "dc198238-4c6a-4ff6-afc2-5878dae4b8fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 4341,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(color => {\n  const backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(pixel => {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:294:10)",
                "diff": null
              },
              "uuid": "6f81c7bf-3807-43a1-a31b-a3ecb64e87a9",
              "parentUUID": "dc198238-4c6a-4ff6-afc2-5878dae4b8fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 4321,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each((color, index) => {\n  cy.wrap(color).click();\n  const backgroundColor = color.css('background-color');\n  const clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:310:10)",
                "diff": null
              },
              "uuid": "bf15e67d-9214-40b8-ab19-27431a50fa4b",
              "parentUUID": "dc198238-4c6a-4ff6-afc2-5878dae4b8fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2d6639f5-072f-4a2b-bc36-781aa9831734",
            "6f81c7bf-3807-43a1-a31b-a3ecb64e87a9",
            "bf15e67d-9214-40b8-ab19-27431a50fa4b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12916,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ca081a98-33cd-41bc-a69a-f936a046f0e3",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 4295,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#clear-board`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#clear-board`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:327:28)",
                "diff": null
              },
              "uuid": "1386ce7e-dfab-4af8-9102-a2f7ba9691c4",
              "parentUUID": "ca081a98-33cd-41bc-a69a-f936a046f0e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4280,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(palette => {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(clearBtn => {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#clear-board`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#clear-board`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:331:30)",
                "diff": null
              },
              "uuid": "3076ac13-9831-4652-bd4f-47921514ce58",
              "parentUUID": "ca081a98-33cd-41bc-a69a-f936a046f0e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 4186,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#clear-board`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#clear-board`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:338:28)",
                "diff": null
              },
              "uuid": "52d6c702-dd23-4074-a198-76ae59447767",
              "parentUUID": "ca081a98-33cd-41bc-a69a-f936a046f0e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 4391,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(color => {\n  const backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(pixel => {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(pixel => {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.pixel`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:344:10)",
                "diff": null
              },
              "uuid": "76d922b2-884a-4477-84d9-d4413f727f4b",
              "parentUUID": "ca081a98-33cd-41bc-a69a-f936a046f0e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1386ce7e-dfab-4af8-9102-a2f7ba9691c4",
            "3076ac13-9831-4652-bd4f-47921514ce58",
            "52d6c702-dd23-4074-a198-76ae59447767",
            "76d922b2-884a-4477-84d9-d4413f727f4b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 17152,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "831bdf40-5d02-4491-8d00-c341f2063e21",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4255,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:359:27)",
                "diff": null
              },
              "uuid": "b3bff757-0289-4d32-927e-981d602bc56d",
              "parentUUID": "831bdf40-5d02-4491-8d00-c341f2063e21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4286,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#generate-board`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#generate-board`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:362:31)",
                "diff": null
              },
              "uuid": "7b733540-52c6-4ec3-ab3f-7d3130476840",
              "parentUUID": "831bdf40-5d02-4491-8d00-c341f2063e21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4304,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size[type='number'][min='1']`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size[type='number'][min='1']`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:365:8)",
                "diff": null
              },
              "uuid": "46b8878a-3fe3-4ef7-a923-fff10d5afb2a",
              "parentUUID": "831bdf40-5d02-4491-8d00-c341f2063e21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4208,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#generate-board`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#generate-board`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:368:8)",
                "diff": null
              },
              "uuid": "3a5b3991-8f2d-412a-9bc3-9f9584d6ae1b",
              "parentUUID": "831bdf40-5d02-4491-8d00-c341f2063e21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4282,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(palette => {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(palette => {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:372:29)",
                "diff": null
              },
              "uuid": "6a13f8cc-144e-4278-a0da-dfaaf0efa993",
              "parentUUID": "831bdf40-5d02-4491-8d00-c341f2063e21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4346,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(board => {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:379:8)",
                "diff": null
              },
              "uuid": "339179f8-2a94-400a-b69f-f8d3f7810928",
              "parentUUID": "831bdf40-5d02-4491-8d00-c341f2063e21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4437,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let alerted = false;\ncy.on('window:alert', msg => alerted = msg);\ncy.get('#generate-board').click().then(() => expect(alerted).to.match(/Board inválido!/i));",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#generate-board`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#generate-board`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:386:8)",
                "diff": null
              },
              "uuid": "13cfb06a-29e0-4d97-b357-271990371ff6",
              "parentUUID": "831bdf40-5d02-4491-8d00-c341f2063e21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4499,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:389:8)",
                "diff": null
              },
              "uuid": "fd32ae87-1a1a-4cae-8bec-42b41098a9f1",
              "parentUUID": "831bdf40-5d02-4491-8d00-c341f2063e21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4319,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(pixel => {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:394:8)",
                "diff": null
              },
              "uuid": "4b372005-deab-49cc-b438-4b050011ba75",
              "parentUUID": "831bdf40-5d02-4491-8d00-c341f2063e21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b3bff757-0289-4d32-927e-981d602bc56d",
            "7b733540-52c6-4ec3-ab3f-7d3130476840",
            "46b8878a-3fe3-4ef7-a923-fff10d5afb2a",
            "3a5b3991-8f2d-412a-9bc3-9f9584d6ae1b",
            "6a13f8cc-144e-4278-a0da-dfaaf0efa993",
            "339179f8-2a94-400a-b69f-f8d3f7810928",
            "13cfb06a-29e0-4d97-b357-271990371ff6",
            "fd32ae87-1a1a-4cae-8bec-42b41098a9f1",
            "4b372005-deab-49cc-b438-4b050011ba75"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38936,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1fddb251-ff0d-4fe7-bc58-159a80697bcf",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4885,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:406:8)",
                "diff": null
              },
              "uuid": "9436f74b-9336-4e08-9d7c-4a9c27fe0936",
              "parentUUID": "1fddb251-ff0d-4fe7-bc58-159a80697bcf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4345,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:411:8)",
                "diff": null
              },
              "uuid": "a6adc889-228d-406c-ba01-f20acf28636d",
              "parentUUID": "1fddb251-ff0d-4fe7-bc58-159a80697bcf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4337,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:416:8)",
                "diff": null
              },
              "uuid": "63499f87-feb8-4be5-baea-3cca74608b0d",
              "parentUUID": "1fddb251-ff0d-4fe7-bc58-159a80697bcf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9436f74b-9336-4e08-9d7c-4a9c27fe0936",
            "a6adc889-228d-406c-ba01-f20acf28636d",
            "63499f87-feb8-4be5-baea-3cca74608b0d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13567,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "adc15cf2-b8e7-426c-b9af-b103ff289ce6",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 533,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(colors => {\n  let currentColors;\n  let previousColors;\n  previousColors = Array.from(colors).map(color => Cypress.$(color).css('background-color'));\n  for (let i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(colors => {\n      currentColors = Array.from(colors).map(color => Cypress.$(color).css('background-color'));\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:435:45)",
                "diff": ""
              },
              "uuid": "be15b4bb-c47c-411f-8ee9-96fd9136a673",
              "parentUUID": "adc15cf2-b8e7-426c-b9af-b103ff289ce6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 414,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(colors => {\n  let currentColors;\n  let previousColors;\n  previousColors = Array.from(colors).map(color => Cypress.$(color).css('background-color'));\n  expect(previousColors[0]).to.eq(BLACK);\n  for (let i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(colors => {\n      currentColors = Array.from(colors).map(color => Cypress.$(color).css('background-color'));\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected 'rgb(0, 0, 255)' to equal 'rgb(0, 0, 0)'",
                "estack": "AssertionError: expected 'rgb(0, 0, 255)' to equal 'rgb(0, 0, 0)'\n    at Context.eval (http://localhost:56872/__cypress/tests?p=cypress/integration/project.spec.js:446:36)",
                "diff": "- 'rgb(0, 0, 255)'\n+ 'rgb(0, 0, 0)'\n"
              },
              "uuid": "4e6d5960-8339-4d83-b37b-1d057ae504c2",
              "parentUUID": "adc15cf2-b8e7-426c-b9af-b103ff289ce6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "be15b4bb-c47c-411f-8ee9-96fd9136a673",
            "4e6d5960-8339-4d83-b37b-1d057ae504c2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 947,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}